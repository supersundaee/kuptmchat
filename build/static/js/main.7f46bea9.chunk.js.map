{"version":3,"sources":["component/login.js","component/min-component/emoji.js","component/min-component/inputBox.js","component/min-component/message.js","component/min-component/header.js","component/min-component/usersList.js","component/Home.js","App.js","registerServiceWorker.js","index.js","config/index.js","assets/logokuptm.png","assets/publicgroupbg.png"],"names":["Login","props","loginWithGmail","setState","loginloader","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","additionalUserInfo","user","userName","profile","given_name","profile_picture","photoURL","fullName","displayName","email","uid","isNewUser","addUserList","isLogin","userRef","database","ref","child","once","snapshot","val","update","catch","error","errorMessage","message","modalLoginFailed","set","state","className","src","logo","alt","h3","style","textAlign","this","display","indeterminated","value","shadow","color","status","x","onPress","icon","y","closeButton","aria-labelledby","open","onClose","Header","id","size","Body","Footer","auto","flat","onClick","Component","emojis","SendButton","styled","background","border","padding","margin","width","transition","boxShadow","opacity","transform","svg","SendIcon","fill","filled","height","label","data-name","xmlns","viewBox","d","InputBox","emojiToggle","showEmoji","selectEmoji","emo","prevText","text","sendMessage","event","preventDefault","trim","roomName","push","userId","time","Date","now","name","emoji","Fragment","onSubmit","aria-label","bordered","clearable","contentRightStyling","placeholder","onChange","target","primaryColor","map","i","key","cursor","Message","scrollToBottom","messagesContainer","ReactDOM","findDOMNode","scroll","scrollHeight","el","loadingData","messages","sort","a","b","conversation","flexDirection","usersList","img","msg","moment","fromNow","marginRight","openactionprofile","modalConfirmLogout","modalProfile","logokuptm","placement","Trigger","Menu","onAction","Item","css","blur","logout","UsersList","selectUser","getMessageFromRoom","activeItem","currentUser","length","variant","isPressable","isHoverable","Image","publicgroupbg","objectFit","h5","position","zIndex","Home","setUsersList","users","on","forEach","snap","rootRef","unsubscribeRoom","receiverDb","subscribeRoom","senderDb","limitToLast","filter","newMsg","off","darkTheme","createTheme","type","PrivateRoute","component","authenticated","rest","Route","render","Redirect","to","pathname","from","location","App","localStorage","setItem","JSON","stringify","isLogout","removeItem","parse","getItem","theme","basename","Switch","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","initializeApp","apiKey","authDomain","projectId","storageBucket","databaseURL","messagingSenderId","appId","measurementId","createRoot","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":";6TA6GeA,EAtGJ,kDACT,WAAYC,GAAQ,IAAD,EAOhB,OAPgB,qBACjB,cAAMA,IAQRC,eAAiB,WACf,EAAKC,SAAS,CAACC,aAAa,IAE5B,IAAIC,EAAW,IAAIC,OAAKC,mBACxBD,iBACGE,gBAAgBH,GAChBI,MAAK,SAAAC,GACJ,EAAKP,SAAS,CAACC,aAAa,IAC5B,IAAIO,EAAqBD,EAAOC,mBAC5BC,EAAO,CACTC,SAAUH,EAAOC,mBAAmBG,QAAQC,WAC5CC,gBAAiBN,EAAOE,KAAKK,SAC7BC,SAAUR,EAAOE,KAAKO,YACtBC,MAAOV,EAAOE,KAAKQ,MACnBC,IAAKX,EAAOE,KAAKS,KAEnB,GAAIV,EAAmBW,UACrB,EAAKC,YAAYb,GACjB,EAAKT,MAAMuB,QAAQZ,OACd,CACL,IAAIa,EAAUC,qBAAWC,MAAMC,MAAM,cAAcA,MAAMlB,EAAOE,KAAKS,KACrEI,EAAQI,KAAK,SAAS,SAAAC,GACFA,EAASC,MAIzBN,EAAQO,OAAO,CAAEhB,gBAAiBN,EAAOE,KAAKK,SAAUI,IAAKX,EAAOE,KAAKS,MAFzE,EAAKE,YAAYb,MAKrB,EAAKT,MAAMuB,QAAQZ,OAGtBqB,OAAM,SAAAC,GACL,IAAIC,EAAeD,EAAME,QACzB,EAAKjC,SAAS,CAAE+B,OAAO,EAAMC,eAAcE,kBAAkB,EAAMjC,aAAa,QAEpF,EAEFmB,YAAc,SAAAb,GACZgB,qBACGC,MACAC,MAAM,cACNA,MAAMlB,EAAOE,KAAKS,KAClBiB,IAAI,CACHzB,SAAUH,EAAOC,mBAAmBG,QAAQC,WAC5CC,gBAAiBN,EAAOE,KAAKK,SAC7BC,SAAUR,EAAOE,KAAKO,YACtBC,MAAOV,EAAOE,KAAKQ,MACnBC,IAAKX,EAAOE,KAAKS,OAvDrB,EAAKkB,MAAQ,CACXL,OAAO,EACPC,aAAc,GACdE,kBAAkB,EAClBjC,aAAa,GACd,EA4FF,OA3FA,mCAqDD,WAAU,IAAD,OACP,OACE,6BACE,yBAAKoC,UAAU,aACb,yBAAKC,IAAKC,IAAMC,IAAI,eACpB,kBAAC,IAAI,CAACC,IAAE,EAACC,MAAO,CAACC,UAAW,WAAU,cACtC,kBAAC,IAAQ,CAACD,OAAkC,IAA3BE,KAAKR,MAAMnC,YAAuB,CAAC4C,QAAS,SAAW,CAACA,QAAS,QAASC,gBAAc,EAACC,MAAO,GAAIC,QAAM,EAACC,MAAM,UAAUC,OAAO,cACnJ,kBAAC,IAAM,CAACC,EAAG,IACX,kBAAC,IAAM,CACLC,QAASR,KAAK7C,eACdsD,KAAM,kBAAC,IAAI,CAAClB,IAAI,UAEhB,kBAAC,IAAM,CAACmB,EAAG,IAAK,sBAIpB,kBAAC,IAAK,CACJC,aAAW,EACXC,kBAAgB,cAChBC,KAAMb,KAAKR,MAAMF,iBACjBwB,QAAS,WAAQ,EAAK1D,SAAS,CAAEkC,kBAAkB,MAEnD,kBAAC,IAAMyB,OAAM,KACX,kBAAC,IAAI,CAACC,GAAG,cAAcC,KAAM,IAAG,mBAIlC,kBAAC,IAAMC,KAAI,KACT,kBAAC,IAAI,KAAElB,KAAKR,MAAMJ,eAEpB,kBAAC,IAAM+B,OAAM,KACX,kBAAC,IAAM,CAACC,MAAI,EAACC,MAAI,EAAChB,MAAM,QAAQiB,QAAS,WAAQ,EAAKlE,SAAS,CAAEkC,kBAAkB,MAAW,gBAOvG,EApGQ,CAASiC,a,2ECPPC,EAAS,CAClB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gB,gEC5KEC,EAAaC,YAAO,UAAQ,GAE9BrB,MAAO,QACPsB,WAAY,cACZC,OAAQ,OACRC,QAAS,EACTC,OAAQ,EAERC,MAAO,QAAM,uBACL,UAAQ,sBACT,UAAQ,mBACX,YAAU,6BACA,YAAU,uBAChB,WAAS,2BACL,kDAAgD,oBACvD,CACDd,KAAM,OACNY,QAAS,MACTG,WAAY,0DACZC,UAAW,uCACd,cACD,UAAW,CACPC,QAAS,KACZ,cACD,WAAY,CACRC,UAAW,aACXC,IAAK,CACDD,UAAW,yBACXD,QAAS,KAEhB,IAGCG,EAAW,SAAH,GASP,IAAD,IARFC,YAAI,MAAG,eAAc,EAErBrB,GADM,EAANsB,OACI,EAAJtB,MACAuB,EAAM,EAANA,OACAT,EAAK,EAALA,MAEAtC,GADK,EAALgD,MACS,EAAThD,WACGvC,EAAK,iBAER,OACI,uCACIwF,YAAU,qBACVC,MAAM,6BACNZ,MAAOd,GAAQc,GAAS,GACxBS,OAAQvB,GAAQuB,GAAU,GAC1BI,QAAQ,YACRnD,UAAWA,GACPvC,GAEJ,uBAAGiF,UAAU,kBACT,0BACIU,EAAE,iXACFP,KAAMA,OAkFXQ,EA3ED,kDACV,WAAY5F,GAAQ,IAAD,EAMd,OANc,qBACf,cAAMA,IAOV6F,YAAc,WACV,EAAK3F,SAAS,CAAE4F,WAAY,EAAKxD,MAAMwD,aAC1C,EACDC,YAAc,SAACC,GACX,IAAIC,EAAW,EAAK3D,MAAM4D,KAC1B,EAAKhG,SAAS,CAAEgG,KAAMD,EAAWD,KACpC,EACDG,Y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","file":"static/js/main.7f46bea9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { auth, database } from \"firebase\";\r\nimport { Button, Spacer, Text, Modal, Container, Progress } from \"@nextui-org/react\";\r\nimport { User } from \"react-iconly\";\r\nimport \"../style/style.css\";\r\nimport logo from \"../assets/logokuptm.png\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: false,\r\n      errorMessage: \"\",\r\n      modalLoginFailed: false,\r\n      loginloader: false\r\n    }\r\n  }\r\n  loginWithGmail = () => {\r\n    this.setState({loginloader: true});\r\n    //e.preventDefault();\r\n    let provider = new auth.GoogleAuthProvider();\r\n    auth()\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        this.setState({loginloader: false});\r\n        let additionalUserInfo = result.additionalUserInfo;\r\n        let user = {\r\n          userName: result.additionalUserInfo.profile.given_name,\r\n          profile_picture: result.user.photoURL,\r\n          fullName: result.user.displayName,\r\n          email: result.user.email,\r\n          uid: result.user.uid\r\n        }\r\n        if (additionalUserInfo.isNewUser) {\r\n          this.addUserList(result);\r\n          this.props.isLogin(user);\r\n        } else {\r\n          let userRef = database().ref().child(\"usersTable\").child(result.user.uid);\r\n          userRef.once(\"value\", snapshot => {\r\n            var isAvailable = snapshot.val();\r\n            if (!isAvailable) {\r\n              this.addUserList(result);\r\n            } else {\r\n              userRef.update({ profile_picture: result.user.photoURL, uid: result.user.uid });\r\n            }\r\n          });\r\n          this.props.isLogin(user);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        var errorMessage = error.message;\r\n        this.setState({ error: true, errorMessage, modalLoginFailed: true, loginloader: false });\r\n      });\r\n  };\r\n\r\n  addUserList = result => {\r\n    database()\r\n      .ref()\r\n      .child(\"usersTable\")\r\n      .child(result.user.uid)\r\n      .set({\r\n        userName: result.additionalUserInfo.profile.given_name,\r\n        profile_picture: result.user.photoURL,\r\n        fullName: result.user.displayName,\r\n        email: result.user.email,\r\n        uid: result.user.uid\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"loginform\">\r\n          <img src={logo} alt=\"Logo KUPTM\" />\r\n          <Text h3 style={{textAlign: 'center'}}>KUPTM Chat</Text>\r\n          <Progress style={this.state.loginloader === true ? {display: 'block'} : {display: 'none'}} indeterminated value={50} shadow color=\"primary\" status=\"secondary\" />\r\n          <Spacer x={1}/>\r\n          <Button\r\n            onPress={this.loginWithGmail}\r\n            icon={<User set=\"bold\" />}\r\n          >\r\n            <Spacer y={1} />\r\n            Login with Google\r\n          </Button>\r\n        </div>\r\n        <Modal\r\n          closeButton\r\n          aria-labelledby=\"modal-title\"\r\n          open={this.state.modalLoginFailed}\r\n          onClose={() => { this.setState({ modalLoginFailed: false }) }}\r\n        >\r\n          <Modal.Header>\r\n            <Text id=\"modal-title\" size={18}>\r\n              Sign in failed\r\n            </Text>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Text>{this.state.errorMessage}</Text>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button auto flat color=\"error\" onClick={() => { this.setState({ modalLoginFailed: false }) }}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","export const emojis = [\r\n    '😄',\r\n    '😃',\r\n    '😀',\r\n    '😊',\r\n    '😉',\r\n    '😍',\r\n    '😘',\r\n    '😚',\r\n    '😗',\r\n    '😙',\r\n    '😜',\r\n    '😝',\r\n    '😛',\r\n    '😳',\r\n    '😁',\r\n    '😔',\r\n    '😌',\r\n    '😒',\r\n    '😞',\r\n    '😣',\r\n    '😢',\r\n    '😂',\r\n    '😭',\r\n    '😪',\r\n    '😥',\r\n    '😰',\r\n    '😅',\r\n    '😓',\r\n    '😩',\r\n    '😫',\r\n    '😨',\r\n    '😱',\r\n    '😠',\r\n    '😡',\r\n    '😤',\r\n    '😖',\r\n    '😆',\r\n    '😋',\r\n    '😷',\r\n    '😎',\r\n    '😴',\r\n    '😵',\r\n    '😲',\r\n    '😟',\r\n    '😦',\r\n    '😧',\r\n    '👿',\r\n    '😮',\r\n    '😬',\r\n    '😐',\r\n    '😕',\r\n    '😯',\r\n    '😏',\r\n    '😑',\r\n    '👲',\r\n    '👳',\r\n    '👮',\r\n    '👷',\r\n    '💂',\r\n    '👶',\r\n    '👦',\r\n    '👧',\r\n    '👨',\r\n    '👩',\r\n    '👴',\r\n    '👵',\r\n    '👱',\r\n    '👼',\r\n    '👸',\r\n    '😺',\r\n    '😸',\r\n    '😻',\r\n    '😽',\r\n    '😼',\r\n    '🙀',\r\n    '😿',\r\n    '😹',\r\n    '😾',\r\n    '👹',\r\n    '👺',\r\n    '🙈',\r\n    '🙉',\r\n    '🙊',\r\n    '💀',\r\n    '👽',\r\n    '💩',\r\n    '🔥',\r\n    '✨',\r\n    '🌟',\r\n    '💫',\r\n    '💥',\r\n    '💢',\r\n    '💦',\r\n    '💧',\r\n    '💤',\r\n    '💨',\r\n    '👂',\r\n    '👀',\r\n    '👃',\r\n    '👅',\r\n    '👄',\r\n    '👍',\r\n    '👎',\r\n    '👌',\r\n    '👊',\r\n    '✊',\r\n    '👋',\r\n    '✋',\r\n    '👐',\r\n    '👆',\r\n    '👇',\r\n    '👉',\r\n    '👈',\r\n    '🙌',\r\n    '🙏',\r\n    '👏',\r\n    '💪',\r\n    '🚶',\r\n    '🏃',\r\n    '💃',\r\n    '👫',\r\n    '👪',\r\n    '💏',\r\n    '💑',\r\n    '👯',\r\n    '🙆',\r\n    '🙅',\r\n    '💁',\r\n    '🙋',\r\n    '💆',\r\n    '💇',\r\n    '💅',\r\n    '👰',\r\n    '🙎',\r\n    '🙍',\r\n    '🙇',\r\n    '🎩',\r\n    '👑',\r\n    '👒',\r\n    '👟',\r\n    '👞',\r\n    '👡',\r\n    '👠',\r\n    '👢',\r\n    '👕',\r\n    '👔',\r\n    '👚',\r\n    '👗',\r\n    '🎽',\r\n    '👖',\r\n    '👘',\r\n    '👙',\r\n    '💼',\r\n    '👜',\r\n    '👝',\r\n    '👛',\r\n    '👓',\r\n    '🎀',\r\n    '🌂',\r\n    '💄',\r\n    '💛',\r\n    '💙',\r\n    '💜',\r\n    '💚',\r\n    '💔',\r\n    '💗',\r\n    '💓',\r\n    '💕',\r\n    '💖',\r\n    '💞',\r\n    '💘',\r\n    '💌',\r\n    '💋',\r\n    '💍',\r\n    '💎',\r\n    '👤',\r\n    '💬',\r\n    '👣',\r\n]","import React, { Component } from \"react\";\r\nimport { Input, styled } from \"@nextui-org/react\";\r\nimport { emojis } from \"./emoji\";\r\nimport { database } from \"firebase\";\r\nimport { ChevronUpCircle } from \"react-iconly\";\r\n\r\nconst SendButton = styled('button', {\r\n    // reset button styles\r\n    color: 'White',\r\n    background: 'transparent',\r\n    border: 'none',\r\n    padding: 0,\r\n    margin: 0,\r\n    // styles\r\n    width: '24px',\r\n    margin: '0 10px',\r\n    dflex: 'center',\r\n    bg: '$primary',\r\n    borderRadius: '$rounded',\r\n    cursor: 'pointer',\r\n    transition: 'opacity 0.25s ease 0s, transform 0.25s ease 0s',\r\n    svg: {\r\n        size: '100%',\r\n        padding: '4px',\r\n        transition: 'transform 0.25s ease 0s, opacity 200ms ease-in-out 50ms',\r\n        boxShadow: '0 5px 20px -5px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    '&:hover': {\r\n        opacity: 0.8\r\n    },\r\n    '&:active': {\r\n        transform: 'scale(0.9)',\r\n        svg: {\r\n            transform: 'translate(24px, -24px)',\r\n            opacity: 0\r\n        }\r\n    }\r\n});\r\n\r\nconst SendIcon = ({\r\n    fill = \"currentColor\",\r\n    filled,\r\n    size,\r\n    height,\r\n    width,\r\n    label,\r\n    className,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <svg\r\n            data-name=\"Iconly/Curved/Lock\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width={size || width || 24}\r\n            height={size || height || 24}\r\n            viewBox=\"0 0 24 24\"\r\n            className={className}\r\n            {...props}\r\n        >\r\n            <g transform=\"translate(2 2)\">\r\n                <path\r\n                    d=\"M19.435.582A1.933,1.933,0,0,0,17.5.079L1.408,4.76A1.919,1.919,0,0,0,.024,6.281a2.253,2.253,0,0,0,1,2.1L6.06,11.477a1.3,1.3,0,0,0,1.61-.193l5.763-5.8a.734.734,0,0,1,1.06,0,.763.763,0,0,1,0,1.067l-5.773,5.8a1.324,1.324,0,0,0-.193,1.619L11.6,19.054A1.91,1.91,0,0,0,13.263,20a2.078,2.078,0,0,0,.25-.01A1.95,1.95,0,0,0,15.144,18.6L19.916,2.525a1.964,1.964,0,0,0-.48-1.943\"\r\n                    fill={fill}\r\n                />\r\n            </g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            emoji: emojis,\r\n            showEmoji: false,\r\n            text: \"\"\r\n        }\r\n    }\r\n    emojiToggle = () => {\r\n        this.setState({ showEmoji: !this.state.showEmoji })\r\n    }\r\n    selectEmoji = (emo) => {\r\n        let prevText = this.state.text;\r\n        this.setState({ text: prevText + emo })\r\n    }\r\n    sendMessage = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.text.trim() !== \"\") {\r\n            database().ref(this.props.roomName).push().set({\r\n                uid: this.props.userId,\r\n                time: Date.now(),\r\n                name: this.props.userName,\r\n                text: this.state.text\r\n            });\r\n            this.setState({ text: \"\" })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"messageinputbox\">\r\n                    <form onSubmit={this.sendMessage} style={{ height: \"100%\", width: \"100%\" }}>\r\n                        <Input\r\n                            aria-label=\"inputmsgbox\"\r\n                            width=\"100%\"\r\n                            size=\"lg\"\r\n                            bordered\r\n                            clearable\r\n                            contentRightStyling={false}\r\n                            value={this.state.text}\r\n                            placeholder=\"Type your message...\"\r\n                            onChange={(text) => { this.setState({ text: text.target.value }) }}\r\n                        />\r\n                    </form>\r\n                    <div>\r\n                        <div className=\"sendingbtngroup\" aria-label=\"sendopt\">\r\n                            <SendButton aria-label=\"emojibtn\" onClick={this.emojiToggle}>\r\n                                <ChevronUpCircle primaryColor=\"white\" set=\"bold\" />\r\n                            </SendButton>\r\n                            <SendButton aria-label=\"sendmsg\" onClick={this.sendMessage}>\r\n                                <SendIcon />\r\n                            </SendButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"emojicontainer\"\r\n                    style={{ display: this.state.showEmoji ? \"block\" : \"none\" }}\r\n                >\r\n                    <div className=\"emojidisplay\">\r\n                        {this.state.emoji.map((emo, i) =>\r\n                            <div\r\n                                key={i}\r\n                                cursor=\"pointer\"\r\n                                onClick={() => this.selectEmoji(emo)}\r\n                            >{emo}</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputBox;","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment'\r\nimport { Text, Loading } from \"@nextui-org/react\";\r\nimport InputBox from \"./inputBox\";\r\nimport \"../../style/style.css\";\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n    //Scroll message UI-kit\r\n    scrollToBottom = () => {\r\n        const messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\r\n        messagesContainer.scroll(0, messagesContainer.scrollHeight);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chats\">\r\n                <div className=\"messagesection\">\r\n                    <div className=\"innermessage\">\r\n                        <div className=\"innermessage2\" ref={(el) => { this.messagesContainer = el; }}>\r\n                            {\r\n                                !this.props.loadingData\r\n                                    ?\r\n                                    this.props.messages.sort((a, b) => new Date(a.time) - new Date(b.time)).map((conversation, i) => (\r\n                                        conversation.uid === this.props.userId\r\n                                            ?\r\n                                            <div className=\"eachmessage\" key={i} style={{ flexDirection: 'row-reverse' }}>\r\n                                                {this.props.usersList.map((user, i) =>\r\n                                                    (user.uid === conversation.uid)\r\n                                                        ?\r\n                                                        <img\r\n                                                            className=\"avatarprofile\"\r\n                                                            key={i}\r\n                                                            src={user.img}\r\n                                                        />\r\n                                                        :\r\n                                                        ''\r\n                                                )}\r\n                                                <div className=\"messagecontainer\">\r\n                                                    <div>\r\n                                                        <div>\r\n                                                            <Text>{conversation.msg}</Text>\r\n                                                            <Text className=\"chatname\">\r\n                                                                - {conversation.name} • {moment(conversation.time).fromNow()}\r\n                                                            </Text>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"eachmessage\" key={i}>\r\n                                                {this.props.usersList.map((user, i) =>\r\n                                                    (user.uid === conversation.uid)\r\n                                                        ?\r\n                                                        <img\r\n                                                            className=\"avatarprofile\"\r\n                                                            key={i}\r\n                                                            src={user.img}\r\n                                                            style={{ marginRight: '0.25em' }}\r\n                                                        />\r\n                                                        :\r\n                                                        ''\r\n                                                )}\r\n                                                <div className=\"messagecontainer2\">\r\n                                                    <div>\r\n                                                        <div>\r\n                                                            <Text>\r\n                                                                {conversation.msg}\r\n                                                            </Text>\r\n                                                            <Text className=\"chatname\">\r\n                                                                - {conversation.name} • {moment(conversation.time).fromNow()}\r\n                                                            </Text>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    ))\r\n                                    :\r\n                                    <div>\r\n                                        <Loading color=\"primary\"></Loading>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                        {!this.props.loadingData\r\n                            ? <InputBox\r\n                                userName={this.props.userName}\r\n                                userId={this.props.userId}\r\n                                roomName={this.props.roomName}\r\n                            />\r\n                            : \"\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import React, { Component } from \"react\";\r\nimport { Dropdown, Avatar, Text, Grid, User, Modal, Button, Switch, Spacer } from \"@nextui-org/react\";\r\nimport logokuptm from \"../../assets/logokuptm.png\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalConfirmLogout: false,\r\n            modalProfile: false\r\n        }\r\n    }\r\n\r\n    openactionprofile = (key) => {\r\n        if (key === 'logout') {\r\n            this.setState({ modalConfirmLogout: true });\r\n        } else if (key === 'profile') {\r\n            this.setState({ modalProfile: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"headerchat\">\r\n                    <div className=\"headeritem\">\r\n                        <img src={logokuptm} />\r\n                        <div style={{ marginRight: '15px' }}>\r\n                            <Text h3>\r\n                                Chat\r\n                            </Text>\r\n                        </div>\r\n                        <Dropdown placement=\"bottom-left\">\r\n                            <Dropdown.Trigger>\r\n                                <Avatar\r\n                                    size=\"md\"\r\n                                    color=\"secondary\"\r\n                                    bordered\r\n                                    src={this.props.profile_picture}\r\n                                />\r\n                            </Dropdown.Trigger>\r\n                            <Dropdown.Menu color=\"secondary\" aria-label=\"Avatar Actions\" onAction={(key) => { this.openactionprofile(key) }}>\r\n                                <Dropdown.Item key=\"profile\" css={{ height: \"$18\" }}>\r\n                                    <Text b color=\"inherit\" css={{ d: \"flex\" }}>\r\n                                        Signed in as {this.props.fullName}\r\n                                    </Text>\r\n                                </Dropdown.Item>\r\n                                <Dropdown.Item key=\"logout\" color=\"error\">\r\n                                    Log Out\r\n                                </Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n                <Modal\r\n                    blur\r\n                    closeButton\r\n                    aria-labelledby=\"modal-title\"\r\n                    open={this.state.modalConfirmLogout}\r\n                    onClose={() => { this.setState({ modalConfirmLogout: false }) }}\r\n                >\r\n                    <Modal.Header>\r\n                        <Text id=\"modal-title\" size={18}>\r\n                            <Text b size={18}>\r\n                                Confirm Logout?\r\n                            </Text>\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Text>Are you sure want to log out?</Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button auto flat color=\"error\" onClick={() => { this.setState({ modalConfirmLogout: false }) }}>\r\n                            No\r\n                        </Button>\r\n                        <Button auto onClick={this.props.logout}>\r\n                            Log out\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    blur\r\n                    closeButton\r\n                    aria-labelledby=\"modal-title\"\r\n                    open={this.state.modalProfile}\r\n                    onClose={() => { this.setState({ modalProfile: false }) }}\r\n                >\r\n                    <Modal.Header>\r\n                        <Text id=\"modal-title\" size={18}>\r\n                            <Text b size={18}>\r\n                                My Profile\r\n                            </Text>\r\n                        </Text>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div style={{ margin: '0 auto' }}>\r\n                            <Avatar\r\n                                size=\"xl\"\r\n                                color=\"primary\"\r\n                                bordered\r\n                                src={this.props.profile_picture}\r\n                            />\r\n                        </div>\r\n                        <Text h3 style={{ textAlign: 'center' }}>{this.props.fullName}</Text>\r\n                        <Text size={16} style={{ textAlign: 'center' }}>\r\n                            Signed in with Google\r\n                        </Text>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button auto flat color=\"error\" onClick={() => { this.setState({ modalProfile: false }) }}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Loading, Text, Card, Spacer } from '@nextui-org/react';\r\nimport \"../../style/style.css\";\r\nimport publicgroupbg from '../../assets/publicgroupbg.png';\r\n\r\nclass UsersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: \"\",\r\n            activeItem: \"chatRoom\"\r\n        }\r\n    }\r\n\r\n    selectUser = (user) => {\r\n        // console.log(user)\r\n        if (this.props.loadingData) { return }\r\n        if (user === \"chatRoom\") {\r\n            this.props.getMessageFromRoom(user)\r\n            this.setState({ activeItem: user });\r\n        } else {\r\n            this.props.selectUser(user)\r\n            this.setState({ activeItem: user.uid })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"userlistouter\">\r\n                    <div className=\"userlistinner\">\r\n                        {!this.props.usersList.length > 0\r\n                            ?\r\n                            <div>\r\n                                <Loading color=\"primary\"></Loading>\r\n                            </div>\r\n                            :\r\n                            <React.Fragment>\r\n                                <Card variant='flat' isPressable isHoverable onClick={() => this.selectUser(\"chatRoom\")}>\r\n                                    <Card.Image\r\n                                        src={publicgroupbg}\r\n                                        objectFit=\"cover\"\r\n                                        width=\"100%\"\r\n                                        height={60}\r\n                                        alt=\"Card image background\"\r\n                                    />\r\n                                    <Text h5 style={{ position: 'absolute', color: 'white', padding: '15px' }}>Public Groups</Text>\r\n                                </Card>\r\n                                <Spacer y={0.5} />\r\n                                {this.props.usersList.map(user => {\r\n                                    return (user.uid !== this.props.userId)\r\n                                        ?\r\n                                        <Card variant='flat' isPressable isHoverable key={user.uid} onClick={() => this.selectUser(user)}>\r\n                                            <Card.Image\r\n                                                src={user.img}\r\n                                                objectFit=\"cover\"\r\n                                                width=\"100%\"\r\n                                                height={60}\r\n                                                alt=\"Card image background\"\r\n                                            />\r\n                                            <Text h5 style={{ position: 'absolute', color: 'white', padding: '10px', zIndex: 2, }}>{user.name}</Text>\r\n                                        </Card>\r\n                                        : \"\"\r\n                                })}\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersList;","import React, { Component } from \"react\";\r\nimport Message from \"./min-component/message\";\r\nimport Header from \"./min-component/header\";\r\nimport UsersList from \"./min-component/usersList\";\r\nimport { database } from \"firebase\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: null,\r\n            userId: \"\",\r\n            userName: \"\",\r\n            usersList: [],\r\n            roomName: \"chatRoom\",\r\n            receiverDb: \"\",\r\n            messages: [],\r\n            loadingData: true\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.setState({\r\n            user: this.props.user,\r\n            userId: this.props.user.uid,\r\n            userName: this.props.user.userName\r\n        });\r\n        if (this.state.usersList.length < 1) { this.setUsersList() }\r\n        this.getMessageFromRoom(this.state.roomName);\r\n    }\r\n\r\n    setUsersList = async (users) => {\r\n        await database()\r\n            .ref(\"usersTable\")\r\n            .on('value', snapshot => {\r\n                let usersList = [];\r\n                snapshot.forEach(snap => {\r\n                    usersList.push({\r\n                        uid: snap.key,\r\n                        name: snap.val().userName,\r\n                        img: snap.val().profile_picture\r\n                    })\r\n                })\r\n                this.setState({ usersList })\r\n            });\r\n    }\r\n\r\n    getMessageFromRoom = async (roomName) => {\r\n        this.setState({ loadingData: true })\r\n        let rootRef = await database().ref(roomName);\r\n        await rootRef.once('value', snapshot => {\r\n            let messages = [];\r\n            snapshot.forEach(snap => {\r\n                messages.push({\r\n                    uid: snap.val().uid,\r\n                    time: snap.val().time,\r\n                    name: snap.val().name,\r\n                    msg: snap.val().text,\r\n                    key: snap.key\r\n                });\r\n            });\r\n            this.setState({ messages, loadingData: false });\r\n        });\r\n        await this.unsubscribeRoom(this.state.roomName);\r\n        if (this.state.receiverDb) {\r\n            await this.unsubscribeRoom(this.state.receiverDb);\r\n        }\r\n        await this.subscribeRoom(roomName);\r\n        this.setState({ roomName: roomName });\r\n    }\r\n\r\n    selectUser = async (user) => {\r\n        this.setState({ loadingData: true })\r\n        let messages = [];\r\n        let senderDb = `${this.state.userId}+${user.uid}`;\r\n        let receiverDb = `${user.uid}+${this.state.userId}`;\r\n\r\n        await database().ref(senderDb).once(\"value\", snapshot => {\r\n            snapshot.forEach(snap => {\r\n                messages.push({\r\n                    uid: snap.val().uid,\r\n                    time: snap.val().time,\r\n                    name: snap.val().name,\r\n                    msg: snap.val().text,\r\n                    key: snap.key\r\n                })\r\n            })\r\n        })\r\n        await database().ref(receiverDb).once(\"value\", snapshot => {\r\n            snapshot.forEach(snap => {\r\n                messages.push({\r\n                    uid: snap.val().uid,\r\n                    time: snap.val().time,\r\n                    name: snap.val().name,\r\n                    msg: snap.val().text,\r\n                    key: snap.key\r\n                })\r\n            })\r\n            this.setState({ messages })\r\n        })\r\n\r\n        await this.unsubscribeRoom(this.state.roomName);\r\n        await this.subscribeRoom(senderDb);\r\n\r\n        if (this.state.receiverDb) {\r\n            await this.unsubscribeRoom(this.state.receiverDb);\r\n        }\r\n        await this.subscribeRoom(receiverDb);\r\n\r\n        this.setState({ roomName: senderDb, receiverDb, loadingData: false });\r\n    }\r\n\r\n    subscribeRoom = async (roomName) => {\r\n        await database().ref().child(roomName).limitToLast(1).on(\"child_added\", snap => {\r\n            if (this.state.messages.filter(msg => msg.key === snap.key).length === 0) {\r\n                let newMsg = {\r\n                    uid: snap.val().uid,\r\n                    time: snap.val().time,\r\n                    name: snap.val().name,\r\n                    msg: snap.val().text,\r\n                    key: snap.key\r\n                }\r\n                this.setState({ messages: [...this.state.messages, newMsg] });\r\n            }\r\n        })\r\n    }\r\n\r\n    unsubscribeRoom = async (roomName) => {\r\n        await database().ref(roomName).off();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < React.Fragment >\r\n                <div className=\"containerouter\">\r\n                    <div className=\"containerinner\">\r\n                        <div className=\"chatinner\">\r\n                            <Header\r\n                                fullName={this.state.user.fullName}\r\n                                profile_picture={this.state.user.profile_picture}\r\n                                logout={this.props.logout}\r\n                            />\r\n                            <div className=\"chatcontent\">\r\n                                <UsersList\r\n                                    userId={this.state.userId}\r\n                                    usersList={this.state.usersList}\r\n                                    selectUser={this.selectUser}\r\n                                    getMessageFromRoom={this.getMessageFromRoom}\r\n                                    loadingData={this.state.loadingData}\r\n                                />\r\n                                <Message\r\n                                    userId={this.state.userId}\r\n                                    userName={this.state.userName}\r\n                                    usersList={this.state.usersList}\r\n                                    roomName={this.state.roomName}\r\n                                    loadingData={this.state.loadingData}\r\n                                    messages={this.state.messages}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Button, Spacer, NextUIProvider, createTheme } from \"@nextui-org/react\";\r\nimport Login from \"./component/login\";\r\nimport Home from \"./component/Home\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nconst darkTheme = createTheme({\r\n  type: 'dark',\r\n});\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      authenticated: false,\r\n      user: null\r\n    }\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      this.setState({ authenticated: true, user })\r\n    }\r\n  }\r\n  isLogin = (user) => {\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n    this.setState({ authenticated: true, user })\r\n  }\r\n  isLogout = () => {\r\n    localStorage.removeItem(\"user\")\r\n    this.setState({ authenticated: false, user: null })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NextUIProvider theme={darkTheme}>\r\n        <Router basename='/project/kuptmchat/'>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              {this.state.authenticated === true\r\n                ? <Redirect to='/chat' />\r\n                : <Login isLogin={this.isLogin} />\r\n              }\r\n            </Route>\r\n            <PrivateRoute\r\n              path=\"/chat\"\r\n              authenticated={this.state.authenticated}\r\n              component={() => <Home user={this.state.user} logout={this.isLogout} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </NextUIProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{ pathname: '/', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { firebaseConfig } from './config';\r\n\r\ninitializeApp(firebaseConfig);\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n   \r\n        <App />\r\n    \r\n);\r\nregisterServiceWorker();\r\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyDF6kR_vg-IqseFZnk5FQ13ghc0r6ipNYk\",\r\n    authDomain: \"react-chat-app-8a5db.firebaseapp.com\",\r\n    projectId: \"react-chat-app-8a5db\",\r\n    storageBucket: \"react-chat-app-8a5db.appspot.com\",\r\n    databaseURL: \"https://react-chat-app-8a5db-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n    messagingSenderId: \"1010903376020\",\r\n    appId: \"1:1010903376020:web:1d746c838a9b20e3d11481\",\r\n    measurementId: \"G-DNFLSDPRTS\"\r\n};\r\n\r\nexport {firebaseConfig};","module.exports = __webpack_public_path__ + \"static/media/logokuptm.af2b63cf.png\";","module.exports = __webpack_public_path__ + \"static/media/publicgroupbg.9bf03ea9.png\";"],"sourceRoot":""}